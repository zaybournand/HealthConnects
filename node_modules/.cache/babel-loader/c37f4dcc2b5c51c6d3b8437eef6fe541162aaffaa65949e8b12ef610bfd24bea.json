{"ast":null,"code":"var _jsxFileName = \"/Users/zaynebournand/Documents/Hack/frontend/my-app/src/ProfilePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './ProfilePage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProfilePage() {\n  _s();\n  const [isEditing, setIsEditing] = useState(false);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [role, setRole] = useState('');\n  const [bio, setBio] = useState(''); // Optional bio field\n  const [resume, setResume] = useState(null); // State for resume file\n\n  useEffect(() => {\n    // Fetch user data from localStorage\n    const savedName = localStorage.getItem('userName');\n    const savedEmail = localStorage.getItem('userEmail');\n    const savedRole = localStorage.getItem('userRole');\n    const savedBio = localStorage.getItem('userBio');\n    const savedResume = localStorage.getItem('userResume');\n\n    // If saved data exists, set it to state\n    if (savedName) setName(savedName);\n    if (savedEmail) setEmail(savedEmail);\n    if (savedRole) setRole(savedRole);\n    if (savedBio) setBio(savedBio);\n    if (savedResume) setResume(savedResume); // Assuming you store the resume as a URL or base64 string\n  }, []);\n  const handleEditClick = () => {\n    setIsEditing(true);\n  };\n  const handleSaveClick = () => {\n    // Save the updated profile information to localStorage\n    localStorage.setItem('userName', name);\n    localStorage.setItem('userEmail', email);\n    localStorage.setItem('userRole', role);\n    localStorage.setItem('userBio', bio);\n\n    // For the resume, if you want to store a URL or base64, save it accordingly\n    if (resume) {\n      localStorage.setItem('userResume', resume.name); // Or resume URL or base64 data\n    }\n    setIsEditing(false); // Exit editing mode after saving\n  };\n  const handleResumeChange = e => {\n    setResume(e.target.files[0]); // Update the resume state with the selected file\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"role\",\n          children: \"Role:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: role,\n          onChange: e => setRole(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: role\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"bio\",\n          children: \"Bio:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: bio,\n          onChange: e => setBio(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: bio\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"resume\",\n          children: \"Attach Resume:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"resume\",\n          onChange: handleResumeChange,\n          accept: \".pdf,.docx,.doc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), resume && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Selected file: \", resume.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this) // Display selected file name\n        ]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"edit-btn\",\n      onClick: isEditing ? handleSaveClick : handleEditClick,\n      children: isEditing ? 'Save Changes' : 'Edit Profile'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(ProfilePage, \"WoM/y8OKJIHNmxTVnoNXVG8oRJQ=\");\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ProfilePage","_s","isEditing","setIsEditing","name","setName","email","setEmail","role","setRole","bio","setBio","resume","setResume","savedName","localStorage","getItem","savedEmail","savedRole","savedBio","savedResume","handleEditClick","handleSaveClick","setItem","handleResumeChange","e","target","files","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","value","onChange","id","accept","onClick","_c","$RefreshReg$"],"sources":["/Users/zaynebournand/Documents/Hack/frontend/my-app/src/ProfilePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './ProfilePage.css';\n\nfunction ProfilePage() {\n    const [isEditing, setIsEditing] = useState(false);\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [role, setRole] = useState('');\n    const [bio, setBio] = useState('');  // Optional bio field\n    const [resume, setResume] = useState(null);  // State for resume file\n\n    useEffect(() => {\n        // Fetch user data from localStorage\n        const savedName = localStorage.getItem('userName');\n        const savedEmail = localStorage.getItem('userEmail');\n        const savedRole = localStorage.getItem('userRole');\n        const savedBio = localStorage.getItem('userBio');\n        const savedResume = localStorage.getItem('userResume');\n\n        // If saved data exists, set it to state\n        if (savedName) setName(savedName);\n        if (savedEmail) setEmail(savedEmail);\n        if (savedRole) setRole(savedRole);\n        if (savedBio) setBio(savedBio);\n        if (savedResume) setResume(savedResume);  // Assuming you store the resume as a URL or base64 string\n    }, []);\n\n    const handleEditClick = () => {\n        setIsEditing(true);\n    };\n\n    const handleSaveClick = () => {\n        // Save the updated profile information to localStorage\n        localStorage.setItem('userName', name);\n        localStorage.setItem('userEmail', email);\n        localStorage.setItem('userRole', role);\n        localStorage.setItem('userBio', bio);\n\n        // For the resume, if you want to store a URL or base64, save it accordingly\n        if (resume) {\n            localStorage.setItem('userResume', resume.name);  // Or resume URL or base64 data\n        }\n\n        setIsEditing(false);  // Exit editing mode after saving\n    };\n\n    const handleResumeChange = (e) => {\n        setResume(e.target.files[0]);  // Update the resume state with the selected file\n    };\n\n    return (\n        <div className=\"profile-container\">\n            <h1>Your Profile</h1>\n            <div className=\"profile-info\">\n                <div className=\"profile-item\">\n                    <label htmlFor=\"name\">Name:</label>\n                    {isEditing ? (\n                        <input\n                            type=\"text\"\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                        />\n                    ) : (\n                        <span>{name}</span>\n                    )}\n                </div>\n                <div className=\"profile-item\">\n                    <label htmlFor=\"email\">Email:</label>\n                    {isEditing ? (\n                        <input\n                            type=\"email\"\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                        />\n                    ) : (\n                        <span>{email}</span>\n                    )}\n                </div>\n                <div className=\"profile-item\">\n                    <label htmlFor=\"role\">Role:</label>\n                    {isEditing ? (\n                        <input\n                            type=\"text\"\n                            value={role}\n                            onChange={(e) => setRole(e.target.value)}\n                        />\n                    ) : (\n                        <span>{role}</span>\n                    )}\n                </div>\n                <div className=\"profile-item\">\n                    <label htmlFor=\"bio\">Bio:</label>\n                    {isEditing ? (\n                        <textarea\n                            value={bio}\n                            onChange={(e) => setBio(e.target.value)}\n                        />\n                    ) : (\n                        <span>{bio}</span>\n                    )}\n                </div>\n                {/* Resume Upload Section */}\n                <div className=\"profile-item\">\n                    <label htmlFor=\"resume\">Attach Resume:</label>\n                    <input\n                        type=\"file\"\n                        id=\"resume\"\n                        onChange={handleResumeChange}\n                        accept=\".pdf,.docx,.doc\"\n                    />\n                    {resume && (\n                        <p>Selected file: {resume.name}</p>  // Display selected file name\n                    )}\n                </div>\n            </div>\n            <button\n                className=\"edit-btn\"\n                onClick={isEditing ? handleSaveClick : handleEditClick}\n            >\n                {isEditing ? 'Save Changes' : 'Edit Profile'}\n            </button>\n        </div>\n    );\n}\n\nexport default ProfilePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}